<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>keyEquivalent</key>
        <string>^~S</string>
        <key>uuid</key>
        <string>C49120AC-6ECC-11D9-ACC8-000D93589AF6</string>
        <key>patterns</key>
        <array>
            <dict>
                <key>captures</key>
                <dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.sql</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.sql</string>
                    </dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.create.sql</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>meta.create.sql</string>
                <key>match</key>
                <string>(?i:^\s*(create|create or replace)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)(['"`]?)(\w+)\4</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.sql</string>
                    </dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.create.sql</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>meta.drop.sql</string>
                <key>match</key>
                <string>(?i:^\s*(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.table.sql</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.cascade.sql</string>
                    </dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.create.sql</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.sql</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>meta.drop.sql</string>
                <key>match</key>
                <string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.table.sql</string>
                    </dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.other.create.sql</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>meta.alter.sql</string>
                <key>match</key>
                <string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>11</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>14</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                    <key>5</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                    <key>7</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>15</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>6</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>8</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                    <key>12</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>9</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>13</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>storage.type.sql</string>
                    </dict>
                    <key>10</key>
                    <dict>
                        <key>name</key>
                        <string>constant.numeric.sql</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(?xi)

				# normal stuff, capture 1
				 \b(bigint|bigserial|bit|boolean|box|bytea|cidr|circle|date|double\sprecision|inet|int|integer|line|lseg|macaddr|money|oid|path|point|polygon|real|serial|smallint|sysdate|text)\b

				# numeric suffix, capture 2 + 3i
				|\b(bit\svarying|character\s(?:varying)?|tinyint|var\schar|float|interval)\((\d+)\)

				# optional numeric suffix, capture 4 + 5i
				|\b(char|number|varchar\d?)\b(?:\((\d+)\))?

				# special case, capture 6 + 7i + 8i
				|\b(numeric)\b(?:\((\d+),(\d+)\))?

				# special case, captures 9, 10i, 11
				|\b(times)(?:\((\d+)\))(\swithoutstimeszone\b)?

				# special case, captures 12, 13, 14i, 15
				|\b(timestamp)(?:(s)\((\d+)\)(\swithoutstimeszone\b)?)?

			</string>
            </dict>
            <dict>
                <key>name</key>
                <string>storage.modifier.sql</string>
                <key>match</key>
                <string>(?i:\b((?:primary|foreign)\s+key|references|on\sdelete(\s+cascade)?|check|constraint)\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>constant.numeric.sql</string>
                <key>match</key>
                <string>\d+</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.DML.sql</string>
                <key>match</key>
                <string>(?i:\b(select(\s+distinct)?|insert\s+into|update|delete|recursive|from|with|where|group\sby|and|union(\s+all)?|having|order\sby|limit|(inner|cross)\s+join|straight_join|(left|right)(\s+outer)?\s+join|natural(\s+(left|right)(\s+outer)?)?\s+join)\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.DDL.create.II.sql</string>
                <key>match</key>
                <string>(?i:\b(on\s+|(not\s+)?null)\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.DML.II.sql</string>
                <key>match</key>
                <string>(?i:\bvalues\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.LUW.sql</string>
                <key>match</key>
                <string>(?i:\b(begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.authorization.sql</string>
                <key>match</key>
                <string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.data-integrity.sql</string>
                <key>match</key>
                <string>(?i:\bin\b)</string>
            </dict>
            <dict>
                <key>name</key>
                <string>keyword.other.object-comments.sql</string>
                <key>match</key>
                <string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#comments</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#strings</string>
            </dict>
            <dict>
                <key>include</key>
                <string>#regexps</string>
            </dict>
        </array>
        <key>name</key>
        <string>SQL</string>
        <key>scopeName</key>
        <string>source.sql</string>
        <key>fileTypes</key>
        <array>
            <string>sql</string>
            <string>ddl</string>
            <string>dml</string>
        </array>
        <key>foldingStopMarker</key>
        <string>^\s*\)</string>
        <key>foldingStartMarker</key>
        <string>\s*\(\s*$</string>
        <key>repository</key>
        <dict>
            <key>string_interpolation</key>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.string.end.sql</string>
                    </dict>
                </dict>
                <key>name</key>
                <string>string.interpolated.sql</string>
                <key>match</key>
                <string>(#\{)([^\}]*)(\})</string>
            </dict>
            <key>regexps</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>begin</key>
                        <string>/(?=\S.*/)</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.regexp.sql</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_interpolation</string>
                            </dict>
                            <dict>
                                <key>name</key>
                                <string>constant.character.escape.slash.sql</string>
                                <key>match</key>
                                <string>\\/</string>
                            </dict>
                        </array>
                        <key>end</key>
                        <string>/</string>
                    </dict>
                    <dict>
                        <key>name</key>
                        <string>string.regexp.modr.sql</string>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>end</key>
                        <string>\}</string>
                        <key>comment</key>
                        <string>We should probably handle nested bracket pairs!?! -- Allan</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>begin</key>
                        <string>%r\{</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_interpolation</string>
                            </dict>
                        </array>
                    </dict>
                </array>
            </dict>
            <key>strings</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>comment</key>
                        <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                        <key>name</key>
                        <string>string.quoted.single.sql</string>
                        <key>match</key>
                        <string>(')[^'\\]*(')</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>'</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.single.sql</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_escape</string>
                            </dict>
                        </array>
                        <key>end</key>
                        <string>'</string>
                    </dict>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>comment</key>
                        <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                        <key>name</key>
                        <string>string.quoted.other.backtick.sql</string>
                        <key>match</key>
                        <string>(`)[^`\\]*(`)</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>`</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.other.backtick.sql</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_escape</string>
                            </dict>
                        </array>
                        <key>end</key>
                        <string>`</string>
                    </dict>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                            <key>3</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>comment</key>
                        <string>this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.</string>
                        <key>name</key>
                        <string>string.quoted.double.sql</string>
                        <key>match</key>
                        <string>(")[^"#]*(")</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>"</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.quoted.double.sql</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_interpolation</string>
                            </dict>
                        </array>
                        <key>end</key>
                        <string>"</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>%\{</string>
                        <key>endCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.end.sql</string>
                            </dict>
                        </dict>
                        <key>beginCaptures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.string.begin.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>string.other.quoted.brackets.sql</string>
                        <key>patterns</key>
                        <array>
                            <dict>
                                <key>include</key>
                                <string>#string_interpolation</string>
                            </dict>
                        </array>
                        <key>end</key>
                        <string>\}</string>
                    </dict>
                </array>
            </dict>
            <key>string_escape</key>
            <dict>
                <key>name</key>
                <string>constant.character.escape.sql</string>
                <key>match</key>
                <string>\\.</string>
            </dict>
            <key>comments</key>
            <dict>
                <key>patterns</key>
                <array>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.line.double-dash.sql</string>
                        <key>match</key>
                        <string>(--).*$\n?</string>
                    </dict>
                    <dict>
                        <key>captures</key>
                        <dict>
                            <key>1</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.line.number-sign.sql</string>
                        <key>match</key>
                        <string>(#).*$\n?</string>
                    </dict>
                    <dict>
                        <key>begin</key>
                        <string>/\*</string>
                        <key>captures</key>
                        <dict>
                            <key>0</key>
                            <dict>
                                <key>name</key>
                                <string>punctuation.definition.comment.sql</string>
                            </dict>
                        </dict>
                        <key>name</key>
                        <string>comment.block.c</string>
                        <key>end</key>
                        <string>\*/</string>
                    </dict>
                </array>
            </dict>
        </dict>
    </dict>
</plist>
